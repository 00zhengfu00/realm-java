                <h2>Table Class</h2>
                <p>
                The Table class allows you to efficiently work with data in terms of rows and columns.
                </p>

                <p>
                  <i>Note</i>: Tables should be generated using the <code>@DefineTable</code> annotation. 
                  The annotation for a Java class with name <code>foo</code> will 
                  generate a number of classes representing rows (<code>Foo</code>), queries (<code>FooQuery</code>),
                  result sets (<code>FooView</code>), and the table (<code>FooTable</code>). 
                </p>
				
                	<dl>
                		<dt><b>Example:</b></dt>
                		<dd>
							<p>
							<pre class="prettyprint" lang-java>
public class Example {

    // PersonTable, Person, PersonQuery, and PersonView are generated:

    @DefineTable
    class person {
        String name;
        int age;
        boolean hired;
    }

}
							</pre>
                            </p>
                         </dd>
                	</dl>
                </dd></dl>

                <h3>Table column fields</h3>
				
${columns}
				
                <p>
				<table border="1" width="100%" cellpadding="3" cellspacing="0" summary="">
				<tbody><tr bgcolor="#CCCCFF" class="TableHeadingColor">
				<th align="left" colspan="2"><font size="+2">
				<b>Constructor Summary</b></font></th>
				</tr>

${constructor_overview}
				
				</tbody></table>

				</p>
				</p>

				<table border="1" width="100%" cellpadding="3" cellspacing="0" summary="">
				<tbody><tr bgcolor="#CCCCFF" class="TableHeadingColor">
				<th align="left" colspan="2"><font size="+2">
				<b>Method Summary</b></font></th>
				</tr>

${method_overview}

				</tbody></table>
