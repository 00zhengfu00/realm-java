Instructions for setting up Eclipse for existing TightDB project 
===============================================================================

IMPORTANT:
=========
The following instructions describe setting up Eclipse for optimal TightDB experience in existing project that uses TightDB.
It is recommended (but not mandatory) first to configure your project for Maven or Ant, as described in ant_setup.txt and maven_setup.txt. 


1. Open or import your existing project in Eclipse.
 
2. Make sure the tightdb.jar is added to the build path (right-click on it -> Add to build path).
  Projects using Maven should already have tightdb.jar added on the build path as a dependency, as described in maven_setup.txt.

3. Make sure the Java compiler is configured with 1.6 or 1.7 version. 
- Right-click on the project -> Properties -> Java compiler.
- Make sure a the configured compiler version is at least 1.6.

4. Configure tightdb-devkit.jar as annotation processor (this will enable Eclipse to generate the TightDB-related source code).
- Right-click on the project -> Properties
- Go to Java Compiler -> Annotation processing and enable annotation processing (check all the 3 check-boxes).  
- In Java Compiler -> Annotation processing configure the output folder for the generated sources in the "Generated source directory" field.
  This will automatically add the output folder as a source folder in the Eclipse configuration.
  - Note: if the project was configured for Ant as described in ant_setup.txt, the output folder must be the same as ${gendir} in build.xml (e.g. "generated").
  - Note: if the project was configured for Ant as described in maven_setup.txt, the output folder must be the same as <outputDirectory> in pom.xml (e.g. "target/generated").
- Go to Java Compiler -> Annotation processing -> Factory Path, add tightdb-devkit.jar (click on Add JARs, find and select tightdb-devkit.jar) and make sure it is checked.  

5. If the previous step was done properly, Eclipse will start generating Java source code as soon as you annotate your schema specification classes with the @Table annotation.