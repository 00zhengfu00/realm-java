def currentVersion = new File("${projectDir}/version.txt").text.trim();

task assembleGradlePlugin(type:GradleBuild) {
    group = 'Build'
    buildFile = file('gradle-plugin/build.gradle')
    tasks = ['assemble']
}

task assembleRealm(type:GradleBuild) {
    group = 'Build'
    buildFile = file('realm/build.gradle')
    tasks = ['assemble']
}

task installGradlePlugin(type:GradleBuild) {
    group = 'Install'
    buildFile = file('gradle-plugin/build.gradle')
    tasks = ['uploadArchives']
}

task installRealm(type:GradleBuild) {
    group = 'Install'
    buildFile = file('realm/build.gradle')
    tasks = ['uploadArchives']
}

task assembleExamples(type:GradleBuild) {
    dependsOn installGradlePlugin
    dependsOn installRealm
    group = 'Build'
    buildFile = file('examples/build.gradle')
    tasks = ['assemble']
}

task javadocs(type:GradleBuild) {
    group = 'Docs'
    buildFile = file('realm/build.gradle')
    tasks = ['bundleJavadocRelease']
}

task eclipseJar(type:GradleBuild) {
    group = 'Artifact'
    buildFile = file('realm/build.gradle')
    tasks = ['shadowJar']
}

task distributionPackage(type:Zip) {
    dependsOn eclipseJar
    dependsOn assembleRealm
    dependsOn javadocs

    group = 'Artifact'
    archiveName = 'realm-android.zip'

    from('changelog.txt')
    from('LICENSE')
    from('version.txt')
    from('realm/realm-annotations-processor/build/libs') {
        include 'realm-android-*.jar'
        into 'eclipse'
    }
    from('realm/realm-library/src/main/jniLibs/') {
        include '**/*'
        into 'eclipse'
    }
    from('realm/realm-library/build/libs') {
        include 'realm-android-*-javadoc.jar'
        into 'docs'
    }
    from('realm/realm-library/build/docs') {
        include '**/*'
        into 'docs'
    }
    from('examples') {
        exclude 'local.properties'
        exclude '**/gradle'
        exclude '**/.gradle'
        exclude '**/build'
        into 'examples'
    }
}
