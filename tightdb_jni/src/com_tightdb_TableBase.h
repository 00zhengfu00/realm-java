/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_tightdb_TableBase */

#ifndef _Included_com_tightdb_TableBase
#define _Included_com_tightdb_TableBase
#ifdef __cplusplus
extern "C" {
#endif
#undef com_tightdb_Table_INFINITE
#define com_tightdb_Table_INFINITE -1i64
/*
 * Class:     com_tightdb_TableBase
 * Method:    createNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_createNative
  (JNIEnv *, jobject);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeClose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeIsValid
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tightdb_Table_nativeIsValid
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeUpdateFromSpec
 * Signature: (JLcom/tightdb/TableSpec;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeUpdateFromSpec
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeClear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeClear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetColumnCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeGetColumnCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetTableSpec
 * Signature: (J)Lcom/tightdb/TableSpec;
 */
JNIEXPORT jobject JNICALL Java_com_tightdb_Table_nativeGetTableSpec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetColumnName
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_tightdb_Table_nativeGetColumnName
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetColumnType
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_tightdb_Table_nativeGetColumnType
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeAddEmptyRow
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeAddEmptyRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeRemove
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeRemove
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeRemoveLast
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeRemoveLast
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertLong
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertLong
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertBoolean
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertBoolean
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertDate
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertDate
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertString
 * Signature: (JJJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertString
  (JNIEnv *, jobject, jlong, jlong, jlong, jstring);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertMixed
 * Signature: (JJJLcom/tightdb/Mixed;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertMixed
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertByteBuffer
 * Signature: (JJJLjava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertByteBuffer
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertByteArray
 * Signature: (JJJ[B)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertByteArray
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertSubTable
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertSubTable
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeInsertDone
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeInsertDone
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetLong
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeGetLong
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetBoolean
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tightdb_Table_nativeGetBoolean
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetDateTime
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeGetDateTime
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetString
 * Signature: (JJJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_tightdb_Table_nativeGetString
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetByteBuffer
 * Signature: (JJJ)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_tightdb_Table_nativeGetByteBuffer
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetByteArray
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_tightdb_Table_nativeGetByteArray
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetMixedType
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_com_tightdb_Table_nativeGetMixedType
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetMixed
 * Signature: (JJJ)Lcom/tightdb/Mixed;
 */
JNIEXPORT jobject JNICALL Java_com_tightdb_Table_nativeGetMixed
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetSubTable
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeGetSubTable
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetSubTableDuringInsert
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeGetSubTableDuringInsert
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeGetSubTableSize
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeGetSubTableSize
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeClearSubTable
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeClearSubTable
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetString
 * Signature: (JJJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetString
  (JNIEnv *, jobject, jlong, jlong, jlong, jstring);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetLong
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetLong
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetBoolean
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetBoolean
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetDate
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetDate
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetByteBuffer
 * Signature: (JJJLjava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetByteBuffer
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetByteArray
 * Signature: (JJJ[B)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetByteArray
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetMixed
 * Signature: (JJJLcom/tightdb/Mixed;)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetMixed
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeAddInt
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeAddInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSetIndex
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeSetIndex
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeHasIndex
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tightdb_Table_nativeHasIndex
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeSum
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeSum
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeMaximum
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeMaximum
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeMinimum
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeMinimum
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeAverage
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_com_tightdb_Table_nativeAverage
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeWhere
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeWhere
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindFirstInt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindFirstInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindFirstBool
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindFirstBool
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindFirstDate
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindFirstDate
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindFirstString
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindFirstString
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindAllInt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindAllInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindAllBool
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindAllBool
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindAllDate
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindAllDate
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeFindAllString
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeFindAllString
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeDistinct
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_tightdb_Table_nativeDistinct
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeOptimize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tightdb_Table_nativeOptimize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_tightdb_TableBase
 * Method:    nativeToJson
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_tightdb_Table_nativeToJson
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
